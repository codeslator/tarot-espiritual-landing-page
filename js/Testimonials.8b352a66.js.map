{"version":3,"sources":["webpack:///./src/views/Testimonials.vue","webpack:///./node_modules/vue3-carousel/dist/carousel.es.js","webpack:///./src/views/Testimonials.vue?e29d","webpack:///./src/views/Testimonials.vue?2e48"],"names":["class","id","testimonialSection","title","text","settings","breakpoints","wrap-around","addons","testimonials","testimony","index","key","defaultConfigs","itemsToShow","itemsToScroll","modelValue","transition","autoplay","snapAlign","wrapAround","pauseAutoplayOnHover","mouseDrag","touchDrag","undefined","counterFactory","Proxy","value","read","obj","prop","Math","max","debounce","fn","delay","timerId","args","clearTimeout","setTimeout","throttle","limit","inThrottle","self","this","apply","getSlides","vNode","_a","_b","_c","type","name","children","getMaxSlideIndex","config","slidesCount","ceil","getMinSlideIndex","floor","getCurrentSlideIndex","val","min","Carousel","props","default","Number","Boolean","includes","Object","slots","emit","root","slides","slidesBuffer","slideWidth","slidesCounter","autoplayTimer","transitionTimer","defaultConfig","assign","initDefaultConfigs","updateBreakpointsConfigs","updateSlidesData","updateSlideWidth","currentSlideIndex","prevSlideIndex","middleSlideIndex","maxSlideIndex","minSlideIndex","mergedConfigs","breakpointsArray","keys","map","sort","a","b","newConfig","some","breakpoint","isMatched","window","matchMedia","matches","handleWindowResize","rect","getBoundingClientRect","width","length","updateSlidesBuffer","slidesArray","Array","shouldShiftSlides","buffer","round","shifts","i","push","shift","unshift","pop","initializeAutoplay","addEventListener","passive","resetAutoplayTimer","isTouch","startPosition","x","y","endPosition","dragged","isDragging","isHover","handleMouseEnter","handleMouseLeave","handleDrag","event","preventDefault","touches","clientX","clientY","deltaX","deltaY","handleDragStart","button","isSliding","document","handleDragEnd","tolerance","sign","draggedSlides","newSlide","slideTo","removeEventListener","setInterval","next","restart","clearInterval","slideIndex","mute","lastSlideIndex","nextSlide","prev","prevSlide","nav","slidesToScroll","output","indexOf","trackStyle","xScroll","transform","slotsProps","currentSlide","slotSlides","slotAddons","needToUpdate","currentSlideUpdated","slidesElements","addonsElements","forEach","el","trackEl","style","onMousedown","onTouchstart","viewPortEl","ref","onMouseenter","onMouseleave","icons","arrowUp","arrowDown","arrowRight","arrowLeft","Icon","iconName","path","pathEl","d","titleEl","viewBox","role","String","Navigation","attrs","slotNext","slotPrev","prevButton","onClick","nextButton","Slide","slideOrder","wrapOrder","updateOrder","slideStyle","items","order","toString","isActive","isVisible","current","slice","isPrev","isNext","carousel__slide","call","components","TestimonialCard","setup","useData","576","__exports__","render"],"mappings":"iKACWA,MAAM,eAAeC,GAAG,gB,GAC1BD,MAAM,kB,GACLA,MAAM,sC,GAGPA,MAAM,yB,GAGJA,MAAM,sB,GACJA,MAAM,U,GAOAA,MAAM,kB,+KAhBvB,eA2BU,UA3BV,EA2BU,CA1BR,eAyBM,MAzBN,EAyBM,CAxBJ,eAEK,KAFL,EAEK,eADA,EAAAE,mBAAmBC,OAAK,GAE7B,eAEI,IAFJ,EAEI,eADC,EAAAD,mBAAmBE,MAAI,GAE5B,eAiBM,MAjBN,EAiBM,CAhBJ,eAeM,MAfN,EAeM,CAdJ,eAaW,GAZRC,SAAU,EAAAA,SACVC,YAAa,EAAAA,YACbC,eAAa,G,CAOHC,OAAM,gBACf,iBAAc,CAAd,eAAc,O,wBANT,iBAA0C,E,mBAAjD,eAIQ,2BAJ4B,EAAAC,cAAY,SAAjCC,EAAWC,G,wBAA1B,eAIQ,GAJ2CC,IAAKD,GAAK,C,wBAC3D,iBAEM,CAFN,eAEM,MAFN,EAEM,CADJ,eAA2C,GAAxBD,UAAWA,GAAS,4B;;;;;;ACXvD,MAAMG,EAAiB,CACnBC,YAAa,EACbC,cAAe,EACfC,WAAY,EACZC,WAAY,IACZC,SAAU,EACVC,UAAW,SACXC,YAAY,EACZC,sBAAsB,EACtBC,WAAW,EACXC,WAAW,EACXjB,iBAAakB,GAGjB,SAASC,IACL,OAAO,IAAIC,MAAM,CAAEC,MAAO,EAAGC,KAAM,GAAK,CACpC,IAAIC,EAAKC,GACL,OAAMA,KAAQD,EAED,SAATC,EACOD,EAAIC,GAERD,EAAIC,KAJA,GAMf,IAAID,EAAKC,EAAMH,GAEX,OADAE,EAAIC,GAAQC,KAAKC,IAAIL,EAAO,IACrB,KAUnB,SAASM,EAASC,EAAIC,GAClB,IAAIC,EACJ,OAAO,YAAaC,GACZD,GACAE,aAAaF,GAEjBA,EAAUG,WAAW,KACjBL,KAAMG,GACND,EAAU,MACXD,IAQX,SAASK,EAASN,EAAIO,GAClB,IAAIC,EACJ,OAAO,YAAaL,GAChB,MAAMM,EAAOC,KACRF,IACDR,EAAGW,MAAMF,EAAMN,GACfK,GAAa,EACbH,WAAW,IAAOG,GAAa,EAAQD,KAInD,SAASK,EAAUC,GACf,IAAIC,EAAIC,EAAIC,EAEZ,OAAKH,EAGsH,mBAA9C,QAAvEE,EAAyB,QAAnBD,EAAKD,EAAM,UAAuB,IAAPC,OAAgB,EAASA,EAAGG,YAAyB,IAAPF,OAAgB,EAASA,EAAGG,MACtGL,GACiB,QAAnBG,EAAKH,EAAM,UAAuB,IAAPG,OAAgB,EAASA,EAAGG,WAAa,GAJlE,GAMf,SAASC,EAAiBC,EAAQC,GAC9B,GAAID,EAAOnC,WACP,OAAOoC,EAAc,EAEzB,OAAQD,EAAOpC,WACX,IAAK,QACD,OAAOqC,EAAcD,EAAOzC,YAChC,IAAK,MACD,OAAO0C,EAAc,EACzB,IAAK,SACL,IAAK,aACD,OAAOA,EAAczB,KAAK0B,KAAKF,EAAOzC,YAAc,GACxD,IAAK,cACD,OAAO0C,EAAczB,KAAK0B,KAAKF,EAAOzC,YAAc,GACxD,QACI,OAAO,GAGnB,SAAS4C,EAAiBH,GACtB,GAAIA,EAAOnC,WACP,OAAO,EAEX,OAAQmC,EAAOpC,WACX,IAAK,QACD,OAAO,EACX,IAAK,MACD,OAAOoC,EAAOzC,YAAc,EAChC,IAAK,SACL,IAAK,aACD,OAAOiB,KAAK4B,OAAOJ,EAAOzC,YAAc,GAAK,GACjD,IAAK,cACD,OAAOiB,KAAK4B,OAAOJ,EAAOzC,YAAc,GAAK,GACjD,QACI,OAAO,GAGnB,SAAS8C,EAAqBL,EAAQM,EAAK7B,EAAK8B,GAC5C,OAAIP,EAAOnC,WACAyC,EAEJ9B,KAAK+B,IAAI/B,KAAKC,IAAI6B,EAAKC,GAAM9B,GAGxC,IAAI+B,EAAW,eAAgB,CAC3BX,KAAM,WACNY,MAAO,CAEHlD,YAAa,CACTmD,QAASpD,EAAeC,YACxBqC,KAAMe,QAGVnD,cAAe,CACXkD,QAASpD,EAAeE,cACxBoC,KAAMe,QAGV9C,WAAY,CACR6C,QAASpD,EAAeO,WACxB+B,KAAMgB,SAGVhD,UAAW,CACP8C,QAASpD,EAAeM,UACxB,UAAUQ,GAEN,MAAO,CAAC,QAAS,MAAO,SAAU,cAAe,cAAcyC,SAASzC,KAIhFV,WAAY,CACRgD,QAASpD,EAAeI,WACxBkC,KAAMe,QAGV5D,YAAa,CACT2D,QAASpD,EAAeP,YACxB6C,KAAMkB,QAGVnD,SAAU,CACN+C,QAASpD,EAAeK,SACxBiC,KAAMe,QAGV7C,qBAAsB,CAClB4C,QAASpD,EAAeQ,qBACxB8B,KAAMgB,SAGVnD,WAAY,CACRiD,aAASzC,EACT2B,KAAMe,QAGV5C,UAAW,CACP2C,QAASpD,EAAeS,UACxB6B,KAAMgB,SAGV5C,UAAW,CACP0C,QAASpD,EAAeU,UACxB4B,KAAMgB,SAGV9D,SAAU,CACN,UACI,MAAO,IAEX8C,KAAMkB,SAGd,MAAML,GAAO,MAAEM,EAAK,KAAEC,IAClB,IAAIvB,EACJ,MAAMwB,EAAO,eAAI,MACXC,EAAS,eAAI,IACbC,EAAe,eAAI,IACnBC,EAAa,eAAI,GACjBnB,EAAc,eAAI,GAClBoB,EAAgBnD,IAChBoD,EAAgB,eAAI,MACpBC,EAAkB,eAAI,MAC5B,IAAIxE,EAAc,eAAI,IAElByE,EAAgBV,OAAOW,OAAO,GAAInE,GAEtC,MAAM0C,EAAS,eAASc,OAAOW,OAAO,GAAInE,IAE1C,eAAMmD,EAAO,KACTiB,IACAC,IACAC,IACAC,MAGJ,MAAMC,EAAoB,eAAiC,QAA5BrC,EAAKO,EAAOvC,kBAA+B,IAAPgC,EAAgBA,EAAK,GAClFsC,EAAiB,eAAI,GACrBC,EAAmB,eAAI,GACvBC,EAAgB,eAAI,GACpBC,EAAgB,eAAI,GAW1B,SAASR,IAEL,MAAMS,EAAgBrB,OAAOW,OAAOX,OAAOW,OAAO,GAAIhB,GAAQA,EAAM3D,UAEpEC,EAAc,eAAI+D,OAAOW,OAAO,GAAIU,EAAcpF,cAElDyE,EAAgBV,OAAOW,OAAOX,OAAOW,OAAO,GAAIU,GAAgB,CAAErF,cAAUmB,EAAWlB,iBAAakB,IAExG,SAAS0D,IACL,MAAMS,EAAmBtB,OAAOuB,KAAKtF,EAAYqB,OAC5CkE,IAAKjF,GAAQsD,OAAOtD,IACpBkF,KAAK,CAACC,EAAGC,KAAOA,GAAKD,GAC1B,IASInF,EATAqF,EAAY5B,OAAOW,OAAO,GAAID,GAUlC,IAAKnE,KATL+E,EAAiBO,KAAMC,IACnB,MAAMC,EAAYC,OAAOC,WAAW,eAAeH,QAAiBI,QACpE,QAAIH,IACAH,EAAY5B,OAAOW,OAAOX,OAAOW,OAAO,GAAIiB,GAAY3F,EAAYqB,MAAMwE,KACnE,KAKHF,EAER1C,EAAO3C,GAAOqF,EAAUrF,GAlChC,eAAQ,SAAU2C,GAClB,eAAQ,eAAgBmB,GACxB,eAAQ,cAAelB,GACvB,eAAQ,eAAgB6B,GACxB,eAAQ,WAAYG,GACpB,eAAQ,WAAYC,GACpB,eAAQ,gBAAiBb,GA+BzB,MAAM4B,EAAqBvE,EAAS,KAC5B3B,EAAYqB,QACZuD,IACAC,KAEJC,KACD,IAIH,SAASA,IACL,IAAKZ,EAAK7C,MACN,OACJ,MAAM8E,EAAOjC,EAAK7C,MAAM+E,wBACxB/B,EAAWhD,MAAQ8E,EAAKE,MAAQpD,EAAOzC,YAE3C,SAASqE,IACL3B,EAAY7B,MAAQ8C,EAAO9C,MAAMiF,OAC7BpD,EAAY7B,OAAS,IAEzB4D,EAAiB5D,MAAQI,KAAK0B,MAAMD,EAAY7B,MAAQ,GAAK,GAC7D6D,EAAc7D,MAAQ2B,EAAiBC,EAAQC,EAAY7B,OAC3D8D,EAAc9D,MAAQ+B,EAAiBH,GACvC8B,EAAkB1D,MAAQiC,EAAqBL,EAAQ8B,EAAkB1D,MAAO6D,EAAc7D,MAAO8D,EAAc9D,QAEvH,SAASkF,IACL,MAAMC,EAAc,IAAIC,MAAMvD,EAAY7B,OAAOiE,QAC3CoB,EAAoBzD,EAAOnC,YAAcmC,EAAOzC,YAAc,GAAK0C,EAAY7B,MACrF,GAAIqF,EAAmB,CACnB,MAAMC,EAAgC,IAAvB1D,EAAOzC,YAChBiB,KAAKmF,OAAO1D,EAAY7B,MAAQ4B,EAAOzC,aAAe,GACtD,EACN,IAAIqG,EAASF,EAAS5B,EAAkB1D,MAQxC,GAPyB,QAArB4B,EAAOpC,UACPgG,GAAUpF,KAAK4B,MAAMJ,EAAOzC,YAAc,GAEhB,WAArByC,EAAOpC,WAA+C,eAArBoC,EAAOpC,WAC7CgG,IAGAA,EAAS,EACT,IAAK,IAAIC,EAAID,EAAQC,EAAI,EAAGA,IACxBN,EAAYO,KAAKnD,OAAO4C,EAAYQ,eAIxC,IAAK,IAAIF,EAAI,EAAGA,EAAID,EAAQC,IACxBN,EAAYS,QAAQrD,OAAO4C,EAAYU,QAInD9C,EAAa/C,MAAQmF,EAEzB,eAAU,KACFxG,EAAYqB,QACZuD,IACAC,KAEJC,IACI7B,EAAOrC,UAAYqC,EAAOrC,SAAW,GACrCuG,IAEJpB,OAAOqB,iBAAiB,SAAUlB,EAAoB,CAAEmB,SAAS,MAErE,eAAY,KACJ7C,EAAgBnD,OAChBW,aAAawC,EAAgBnD,OAEjCiG,GAAmB,KAKvB,IAAIC,GAAU,EACd,MAAMC,EAAgB,CAAEC,EAAG,EAAGC,EAAG,GAC3BC,EAAc,CAAEF,EAAG,EAAGC,EAAG,GACzBE,EAAU,eAAS,CAAEH,EAAG,EAAGC,EAAG,IAC9BG,EAAa,gBAAI,GACjBC,EAAU,gBAAI,GACdC,EAAmB,KACrBD,EAAQzG,OAAQ,GAEd2G,EAAmB,KACrBF,EAAQzG,OAAQ,GAEd4G,EAAa/F,EAAUgG,IACpBX,GACDW,EAAMC,iBACVR,EAAYF,EAAIF,EAAUW,EAAME,QAAQ,GAAGC,QAAUH,EAAMG,QAC3DV,EAAYD,EAAIH,EAAUW,EAAME,QAAQ,GAAGE,QAAUJ,EAAMI,QAC3D,MAAMC,EAASZ,EAAYF,EAAID,EAAcC,EACvCe,EAASb,EAAYD,EAAIF,EAAcE,EAC7CE,EAAQF,EAAIc,EACZZ,EAAQH,EAAIc,GACb,IACH,SAASE,EAAgBP,GAChBX,GACDW,EAAMC,iBACVZ,EAAyB,eAAfW,EAAMrF,MACV0E,GAA4B,IAAjBW,EAAMQ,QAAiBC,EAAUtH,QAGlDwG,EAAWxG,OAAQ,EACnBmG,EAAcC,EAAIF,EAAUW,EAAME,QAAQ,GAAGC,QAAUH,EAAMG,QAC7Db,EAAcE,EAAIH,EAAUW,EAAME,QAAQ,GAAGE,QAAUJ,EAAMI,QAC7DM,SAASxB,iBAAiBG,EAAU,YAAc,YAAaU,GAC/DW,SAASxB,iBAAiBG,EAAU,WAAa,UAAWsB,IAEhE,SAASA,IACLhB,EAAWxG,OAAQ,EACnB,MAAMyH,EAAmC,GAAvBrH,KAAKsH,KAAKnB,EAAQH,GAC9BuB,EAAgBvH,KAAKmF,MAAMgB,EAAQH,EAAIpD,EAAWhD,MAAQyH,GAChE,IAAIG,EAAW3F,EAAqBL,EAAQ8B,EAAkB1D,MAAQ2H,EAAe9D,EAAc7D,MAAO8D,EAAc9D,OACxH6H,EAAQD,GACRrB,EAAQH,EAAI,EACZG,EAAQF,EAAI,EACZkB,SAASO,oBAAoB5B,EAAU,YAAc,YAAaU,GAClEW,SAASO,oBAAoB5B,EAAU,WAAa,UAAWsB,GAKnE,SAAS1B,IACL5C,EAAclD,MAAQ+H,YAAY,KAC1BnG,EAAOlC,sBAAwB+G,EAAQzG,OAG3CgI,KACDpG,EAAOrC,UAEd,SAAS0G,EAAmBgC,GAAU,GAC7B/E,EAAclD,QAGnBkI,cAAchF,EAAclD,OACxBiI,GACAnC,KAMR,MAAMwB,EAAY,gBAAI,GACtB,SAASO,EAAQM,EAAYC,GAAO,GAEhC,GADAnC,IACIvC,EAAkB1D,QAAUmI,GAAcb,EAAUtH,MACpD,OAGJ,MAAMqI,EAAiBxG,EAAY7B,MAAQ,EAC3C,OAAImI,EAAaE,EACNR,EAAQM,EAAatG,EAAY7B,OAExCmI,EAAa,EACNN,EAAQM,EAAatG,EAAY7B,QAE5CsH,EAAUtH,OAAQ,EAClB2D,EAAe3D,MAAQ0D,EAAkB1D,MACzC0D,EAAkB1D,MAAQmI,EACrBC,GACDxF,EAAK,oBAAqBc,EAAkB1D,YAEhDmD,EAAgBnD,MAAQY,WAAW,KAC3BgB,EAAOnC,YACPyF,IACJoC,EAAUtH,OAAQ,GACnB4B,EAAOtC,cAEd,SAAS0I,IACL,IAAIM,EAAY5E,EAAkB1D,MAAQ4B,EAAOxC,cAC5CwC,EAAOnC,aACR6I,EAAYlI,KAAK+B,IAAImG,EAAWzE,EAAc7D,QAElD6H,EAAQS,GAEZ,SAASC,IACL,IAAIC,EAAY9E,EAAkB1D,MAAQ4B,EAAOxC,cAC5CwC,EAAOnC,aACR+I,EAAYpI,KAAKC,IAAImI,EAAW1E,EAAc9D,QAElD6H,EAAQW,GAEZ,MAAMC,EAAM,CAAEZ,UAASG,OAAMO,QAC7B,eAAQ,MAAOE,GAIf,MAAMC,EAAiB,eAAS,KAC5B,IAAIC,EAAS5F,EAAa/C,MAAM4I,QAAQlF,EAAkB1D,OAU1D,GATyB,WAArB4B,EAAOpC,WAA+C,eAArBoC,EAAOpC,UACxCmJ,IAAW/G,EAAOzC,YAAc,GAAK,EAEX,gBAArByC,EAAOpC,UACZmJ,IAAW/G,EAAOzC,YAAc,GAAK,EAEX,QAArByC,EAAOpC,YACZmJ,GAAU/G,EAAOzC,YAAc,IAE9ByC,EAAOnC,WAAY,CACpB,MAAMY,EAAMwB,EAAY7B,MAAQ4B,EAAOzC,YACjCgD,EAAM,EACZwG,EAASvI,KAAKC,IAAID,KAAK+B,IAAIwG,EAAQtI,GAAM8B,GAE7C,OAAOwG,IAEX,eAAQ,iBAAkBD,GAC1B,MAAMG,GAAa,eAAS,KACxB,MAAMC,EAAUvC,EAAQH,EAAIsC,EAAe1I,MAAQgD,EAAWhD,MAC9D,MAAO,CACH+I,UAAW,cAAcD,OACzBxJ,YAAegI,EAAUtH,MAAQ4B,EAAOtC,WAAa,GAAzC,QAGd0J,GAAa,eAAS,CACxBhG,aACAnB,cACAoH,aAAcvF,IAEZwF,GAAavG,EAAML,SAAWK,EAAMG,OACpCqG,GAAaxG,EAAM9D,OAmBzB,OAlBA,eAAY,KAER,MAAMuK,EAAevH,EAAY7B,QAAU8C,EAAO9C,MAAMiF,OAClDoE,OAA2CxJ,IAArBwC,EAAMhD,YAA4BqE,EAAkB1D,QAAUqC,EAAMhD,WAC5FgK,GACAxB,EAAQtF,OAAOF,EAAMhD,aAAa,GAElC+J,IACA5F,IACA0B,KAEAjC,EAAchD,OACdgD,EAAcjD,MAAQ8C,EAAO9C,MAAMiF,OAAS,KAGpD3B,IACAC,IACA2B,IACO,KACH,MAAMoE,EAAiBnI,EAAyB,OAAf+H,SAAsC,IAAfA,QAAwB,EAASA,GAAWF,KAC9FO,GAAiC,OAAfJ,SAAsC,IAAfA,QAAwB,EAASA,GAAWH,MAAgB,GAC3GlG,EAAO9C,MAAQsJ,EAEfA,EAAeE,QAAQ,CAACC,EAAIzK,IAAWyK,EAAGpH,MAAMrD,MAAQA,GACxD,MAAM0K,EAAU,eAAE,KAAM,CACpBrL,MAAO,kBACPsL,MAAOd,GAAW7I,MAClB4J,YAAahI,EAAOjC,UAAYyH,EAAkB,KAClDyC,aAAcjI,EAAOhC,UAAYwH,EAAkB,MACpDkC,GACGQ,EAAa,eAAE,MAAO,CAAEzL,MAAO,sBAAwBqL,GAC7D,OAAO,eAAE,UAAW,CAChBK,IAAKlH,EACLxE,MAAO,WACP,aAAc,UACd2L,aAActD,EACduD,aAActD,GACf,CAACmD,EAAYP,QAK5B,MAAMW,EAAQ,CACVC,QAAS,iDACTC,UAAW,0DACXC,WAAY,yDACZC,UAAW,4DAGTC,EAAQlI,IACV,MAAMmI,EAAWnI,EAAMZ,KACvB,IAAK+I,GAAgC,kBAAbA,EACpB,OAEJ,MAAMC,EAAOP,EAAMM,GACbE,EAAS,eAAE,OAAQ,CAAEC,EAAGF,IAC9BpI,EAAM7D,MACN,MAAMoM,EAAU,eAAE,QAAS,KAAMJ,GACjC,OAAO,eAAE,MAAO,CACZnM,MAAO,iBACPwM,QAAS,YACTC,KAAM,OACP,CAACF,EAASF,KAEjBH,EAAKlI,MAAQ,CAAEZ,KAAMsJ,OAAQvM,MAAOuM,QAEpC,MAAMC,EAAa,CAAC3I,GAASM,QAAOsI,YAChC,MAAQjD,KAAMkD,EAAU3C,KAAM4C,GAAaxI,EACrC8F,EAAM,eAAO,MAAO,IACpB2C,EAAa,eAAE,SAAU,CAC3B5J,KAAM,SACNnD,MAAO,CAAC,iBAA4B,OAAV4M,QAA4B,IAAVA,OAAmB,EAASA,EAAM5M,OAC9E,aAAc,6BACdgN,QAAS5C,EAAIF,OACA,OAAb4C,QAAkC,IAAbA,OAAsB,EAASA,MAAe,eAAEZ,EAAM,CAAE9I,KAAM,eACjF6J,EAAa,eAAE,SAAU,CAC3B9J,KAAM,SACNnD,MAAO,CAAC,iBAA4B,OAAV4M,QAA4B,IAAVA,OAAmB,EAASA,EAAM5M,OAC9E,aAAc,yBACdgN,QAAS5C,EAAIT,OACA,OAAbkD,QAAkC,IAAbA,OAAsB,EAASA,MAAe,eAAEX,EAAM,CAAE9I,KAAM,gBACvF,MAAO,CAAC2J,EAAYE,IAGxB,IAAIC,EAAQ,eAAgB,CACxB9J,KAAM,gBACNY,MAAO,CACHrD,MAAO,CACHwC,KAAMe,OACND,QAAS,IAGjB,MAAMD,GAAO,MAAEM,IACX,MAAMf,EAAS,eAAO,SAAU,eAASc,OAAOW,OAAO,GAAInE,KACrD6D,EAAe,eAAO,eAAgB,eAAI,KAC1CE,EAAgB,eAAO,iBACvBgG,EAAe,eAAO,eAAgB,eAAI,IAC1CP,EAAiB,eAAO,iBAAkB,eAAI,IAC9C8C,EAAavI,EAAcjD,MAC3ByL,EAAY,eAAID,GAKtB,SAASE,IACLD,EAAUzL,MAAQ+C,EAAa/C,MAAM4I,QAAQ4C,GAL7C5J,EAAOnC,aACPiM,IACA,eAAYA,IAKhB,MAAMC,EAAa,eAAS,KACxB,MAAMC,EAAQhK,EAAOzC,YACf6F,EAAY,EAAI4G,EAAS,IAAjB,IACd,MAAO,CACH5G,QACA6G,MAAOJ,EAAUzL,MAAM8L,cAGzBC,EAAW,IAAM1J,EAAMrD,QAAUiK,EAAajJ,MAC9CgM,EAAY,KACd,MAAM7J,EAAM/B,KAAK0B,KAAK4G,EAAe1I,OAC/BK,EAAMD,KAAK4B,MAAM0G,EAAe1I,MAAQ4B,EAAOzC,aAC/C8M,EAAUlJ,EAAa/C,MAAMkM,MAAM/J,EAAK9B,GAC9C,OAAO4L,EAAQxJ,SAASJ,EAAMrD,QAE5BmN,EAAS,IAAM9J,EAAMrD,QAAU+D,EAAa/C,MAAMI,KAAK0B,KAAK4G,EAAe1I,OAAS,GACpFoM,EAAS,IAAM/J,EAAMrD,QACvB+D,EAAa/C,MAAMI,KAAK4B,MAAM0G,EAAe1I,MAAQ4B,EAAOzC,cAChE,MAAO,KACH,IAAIkC,EACJ,OAAO,eAAE,KAAM,CACXsI,MAAOgC,EAAW3L,MAClB3B,MAAO,CACHgO,iBAAiB,EACjB,0BAA2BN,IAC3B,2BAA4BC,IAC5B,wBAAyBG,IACzB,wBAAyBC,MAEL,QAAxB/K,EAAKsB,EAAML,eAA4B,IAAPjB,OAAgB,EAASA,EAAGiL,KAAK3J,Q,gBDlkBlE,G,UAAA,CACblB,KAAM,eACN8K,WAAY,CACVnK,WACAmJ,QACAP,aACAwB,gBAAiB,gBAAqB,kBACpC,oDAGJC,MAVa,WAWX,MAA6C,OAAAC,EAAA,QAArC5N,EAAR,EAAQA,aAAcP,EAAtB,EAAsBA,mBAEtB,MAAO,CACLO,eACAP,qBACAG,SAAU,CACRS,YAAa,EACbK,UAAW,UAEbb,YAAa,CACXgO,IAAK,CACHxN,YAAa,EACbK,UAAW,e,iCEpDrB,MAAMoN,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,gB,2DCTf","file":"js/Testimonials.8b352a66.js","sourcesContent":["<template>\r\n  <section class=\"testimonials\" id=\"testimonials\">\r\n    <div class=\"container pt-3\">\r\n      <h1 class=\"display-4 fw-bold lh-1 text-center\">\r\n        {{ testimonialSection.title }}\r\n      </h1>\r\n      <p class=\"lead text-center mt-3\">\r\n        {{ testimonialSection.text }}\r\n      </p>\r\n      <div class=\"row py-3 mb-5 mt-2\">\r\n        <div class=\"col-12\">\r\n          <carousel\r\n            :settings=\"settings\"\r\n            :breakpoints=\"breakpoints\"\r\n            :wrap-around=\"true\"\r\n          >\r\n            <slide v-for=\"(testimony, index) in testimonials\" :key=\"index\">\r\n              <div class=\"carousel__item\">\r\n                <testimonial-card :testimony=\"testimony\" />\r\n              </div>\r\n            </slide>\r\n            <template #addons>\r\n              <navigation />\r\n            </template>\r\n          </carousel>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { defineAsyncComponent } from \"vue\";\r\nimport { Carousel, Slide, Navigation } from \"vue3-carousel\";\r\nimport useData from \"@/hooks/useData\";\r\nimport \"vue3-carousel/dist/carousel.css\";\r\nexport default {\r\n  name: \"Testimonials\",\r\n  components: {\r\n    Carousel,\r\n    Slide,\r\n    Navigation,\r\n    TestimonialCard: defineAsyncComponent(() =>\r\n      import(\"@/components/TestimonialCard\")\r\n    ),\r\n  },\r\n  setup() {\r\n    const { testimonials, testimonialSection } = useData();\r\n\r\n    return {\r\n      testimonials,\r\n      testimonialSection,\r\n      settings: {\r\n        itemsToShow: 1,\r\n        snapAlign: \"center\",\r\n      },\r\n      breakpoints: {\r\n        576: {\r\n          itemsToShow: 2,\r\n          snapAlign: \"center\",\r\n        },\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.carousel__prev, .carousel__next {\r\n  background-color: #03071e;\r\n}\r\n@media (max-width: 576px) {\r\n  .carousel__prev {\r\n    left: 20px !important;\r\n  }\r\n  .carousel__next {\r\n    right: 20px !important;\r\n  }\r\n}\r\n</style>","/**\n * Vue 3 Carousel 0.1.32\n * (c) 2021\n * @license MIT\n */\nimport { defineComponent, ref, reactive, watch, provide, onMounted, onUnmounted, computed, watchEffect, h, inject } from 'vue';\n\nconst defaultConfigs = {\r\n    itemsToShow: 1,\r\n    itemsToScroll: 1,\r\n    modelValue: 0,\r\n    transition: 300,\r\n    autoplay: 0,\r\n    snapAlign: 'center',\r\n    wrapAround: false,\r\n    pauseAutoplayOnHover: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    breakpoints: undefined,\r\n};\n\nfunction counterFactory() {\r\n    return new Proxy({ value: 0, read: 0 }, {\r\n        get(obj, prop) {\r\n            if (!(prop in obj))\r\n                return 0;\r\n            if (prop === 'read') {\r\n                return obj[prop];\r\n            }\r\n            return obj[prop]++;\r\n        },\r\n        set(obj, prop, value) {\r\n            obj[prop] = Math.max(value, 0);\r\n            return true;\r\n        },\r\n    });\r\n}\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\r\nfunction debounce(fn, delay) {\r\n    let timerId;\r\n    return function (...args) {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n}\r\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\r\nfunction throttle(fn, limit) {\r\n    let inThrottle;\r\n    return function (...args) {\r\n        const self = this;\r\n        if (!inThrottle) {\r\n            fn.apply(self, args);\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n        }\r\n    };\r\n}\r\nfunction getSlides(vNode) {\r\n    var _a, _b, _c;\r\n    // Return empty array if there's any node\r\n    if (!vNode)\r\n        return [];\r\n    // Check if the Slides components are added directly without v-for (#72)\r\n    if (((_b = (_a = vNode[0]) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.name) === 'CarouselSlide')\r\n        return vNode;\r\n    return ((_c = vNode[0]) === null || _c === void 0 ? void 0 : _c.children) || [];\r\n}\r\nfunction getMaxSlideIndex(config, slidesCount) {\r\n    if (config.wrapAround) {\r\n        return slidesCount - 1;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return slidesCount - config.itemsToShow;\r\n        case 'end':\r\n            return slidesCount - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        case 'center-even':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getMinSlideIndex(config) {\r\n    if (config.wrapAround) {\r\n        return 0;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return 0;\r\n        case 'end':\r\n            return config.itemsToShow - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return Math.floor((config.itemsToShow - 1) / 2);\r\n        case 'center-even':\r\n            return Math.floor((config.itemsToShow - 2) / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getCurrentSlideIndex(config, val, max, min) {\r\n    if (config.wrapAround) {\r\n        return val;\r\n    }\r\n    return Math.min(Math.max(val, min), max);\r\n}\n\nvar Carousel = defineComponent({\r\n    name: 'Carousel',\r\n    props: {\r\n        // count of items to showed per view\r\n        itemsToShow: {\r\n            default: defaultConfigs.itemsToShow,\r\n            type: Number,\r\n        },\r\n        // count of items to be scrolled\r\n        itemsToScroll: {\r\n            default: defaultConfigs.itemsToScroll,\r\n            type: Number,\r\n        },\r\n        // control infinite scrolling mode\r\n        wrapAround: {\r\n            default: defaultConfigs.wrapAround,\r\n            type: Boolean,\r\n        },\r\n        // control snap position alignment\r\n        snapAlign: {\r\n            default: defaultConfigs.snapAlign,\r\n            validator(value) {\r\n                // The value must match one of these strings\r\n                return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\r\n            },\r\n        },\r\n        // sliding transition time in ms\r\n        transition: {\r\n            default: defaultConfigs.transition,\r\n            type: Number,\r\n        },\r\n        // an object to store breakpoints\r\n        breakpoints: {\r\n            default: defaultConfigs.breakpoints,\r\n            type: Object,\r\n        },\r\n        // time to auto advance slides in ms\r\n        autoplay: {\r\n            default: defaultConfigs.autoplay,\r\n            type: Number,\r\n        },\r\n        // pause autoplay when mouse hover over the carousel\r\n        pauseAutoplayOnHover: {\r\n            default: defaultConfigs.pauseAutoplayOnHover,\r\n            type: Boolean,\r\n        },\r\n        // slide number number of initial slide\r\n        modelValue: {\r\n            default: undefined,\r\n            type: Number,\r\n        },\r\n        // toggle mouse dragging.\r\n        mouseDrag: {\r\n            default: defaultConfigs.mouseDrag,\r\n            type: Boolean,\r\n        },\r\n        // toggle mouse dragging.\r\n        touchDrag: {\r\n            default: defaultConfigs.touchDrag,\r\n            type: Boolean,\r\n        },\r\n        // an object to pass all settings\r\n        settings: {\r\n            default() {\r\n                return {};\r\n            },\r\n            type: Object,\r\n        },\r\n    },\r\n    setup(props, { slots, emit }) {\r\n        var _a;\r\n        const root = ref(null);\r\n        const slides = ref([]);\r\n        const slidesBuffer = ref([]);\r\n        const slideWidth = ref(0);\r\n        const slidesCount = ref(1);\r\n        const slidesCounter = counterFactory();\r\n        const autoplayTimer = ref(null);\r\n        const transitionTimer = ref(null);\r\n        let breakpoints = ref({});\r\n        // generate carousel configs\r\n        let defaultConfig = Object.assign({}, defaultConfigs);\r\n        // current config\r\n        const config = reactive(Object.assign({}, defaultConfigs));\r\n        // Update the carousel on props change\r\n        watch(props, () => {\r\n            initDefaultConfigs();\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlideWidth();\r\n        });\r\n        // slides\r\n        const currentSlideIndex = ref((_a = config.modelValue) !== null && _a !== void 0 ? _a : 0);\r\n        const prevSlideIndex = ref(0);\r\n        const middleSlideIndex = ref(0);\r\n        const maxSlideIndex = ref(0);\r\n        const minSlideIndex = ref(0);\r\n        provide('config', config);\r\n        provide('slidesBuffer', slidesBuffer);\r\n        provide('slidesCount', slidesCount);\r\n        provide('currentSlide', currentSlideIndex);\r\n        provide('maxSlide', maxSlideIndex);\r\n        provide('minSlide', minSlideIndex);\r\n        provide('slidesCounter', slidesCounter);\r\n        /**\r\n         * Configs\r\n         */\r\n        function initDefaultConfigs() {\r\n            // generate carousel configs\r\n            const mergedConfigs = Object.assign(Object.assign({}, props), props.settings);\r\n            // Set breakpoints\r\n            breakpoints = ref(Object.assign({}, mergedConfigs.breakpoints));\r\n            // remove extra values\r\n            defaultConfig = Object.assign(Object.assign({}, mergedConfigs), { settings: undefined, breakpoints: undefined });\r\n        }\r\n        function updateBreakpointsConfigs() {\r\n            const breakpointsArray = Object.keys(breakpoints.value)\r\n                .map((key) => Number(key))\r\n                .sort((a, b) => +b - +a);\r\n            let newConfig = Object.assign({}, defaultConfig);\r\n            breakpointsArray.some((breakpoint) => {\r\n                const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\r\n                if (isMatched) {\r\n                    newConfig = Object.assign(Object.assign({}, newConfig), breakpoints.value[breakpoint]);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            let key;\r\n            for (key in newConfig) {\r\n                // @ts-ignore\r\n                config[key] = newConfig[key];\r\n            }\r\n        }\r\n        const handleWindowResize = debounce(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            updateSlideWidth();\r\n        }, 16);\r\n        /**\r\n         * Setup functions\r\n         */\r\n        function updateSlideWidth() {\r\n            if (!root.value)\r\n                return;\r\n            const rect = root.value.getBoundingClientRect();\r\n            slideWidth.value = rect.width / config.itemsToShow;\r\n        }\r\n        function updateSlidesData() {\r\n            slidesCount.value = slides.value.length;\r\n            if (slidesCount.value <= 0)\r\n                return;\r\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\r\n            maxSlideIndex.value = getMaxSlideIndex(config, slidesCount.value);\r\n            minSlideIndex.value = getMinSlideIndex(config);\r\n            currentSlideIndex.value = getCurrentSlideIndex(config, currentSlideIndex.value, maxSlideIndex.value, minSlideIndex.value);\r\n        }\r\n        function updateSlidesBuffer() {\r\n            const slidesArray = [...Array(slidesCount.value).keys()];\r\n            const shouldShiftSlides = config.wrapAround && config.itemsToShow + 1 <= slidesCount.value;\r\n            if (shouldShiftSlides) {\r\n                const buffer = config.itemsToShow !== 1\r\n                    ? Math.round((slidesCount.value - config.itemsToShow) / 2)\r\n                    : 0;\r\n                let shifts = buffer - currentSlideIndex.value;\r\n                if (config.snapAlign === 'end') {\r\n                    shifts += Math.floor(config.itemsToShow - 1);\r\n                }\r\n                else if (config.snapAlign === 'center' || config.snapAlign === 'center-odd') {\r\n                    shifts++;\r\n                }\r\n                // Check shifting directions\r\n                if (shifts < 0) {\r\n                    for (let i = shifts; i < 0; i++) {\r\n                        slidesArray.push(Number(slidesArray.shift()));\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < shifts; i++) {\r\n                        slidesArray.unshift(Number(slidesArray.pop()));\r\n                    }\r\n                }\r\n            }\r\n            slidesBuffer.value = slidesArray;\r\n        }\r\n        onMounted(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            updateSlideWidth();\r\n            if (config.autoplay && config.autoplay > 0) {\r\n                initializeAutoplay();\r\n            }\r\n            window.addEventListener('resize', handleWindowResize, { passive: true });\r\n        });\r\n        onUnmounted(() => {\r\n            if (transitionTimer.value) {\r\n                clearTimeout(transitionTimer.value);\r\n            }\r\n            resetAutoplayTimer(false);\r\n        });\r\n        /**\r\n         * Carousel Event listeners\r\n         */\r\n        let isTouch = false;\r\n        const startPosition = { x: 0, y: 0 };\r\n        const endPosition = { x: 0, y: 0 };\r\n        const dragged = reactive({ x: 0, y: 0 });\r\n        const isDragging = ref(false);\r\n        const isHover = ref(false);\r\n        const handleMouseEnter = () => {\r\n            isHover.value = true;\r\n        };\r\n        const handleMouseLeave = () => {\r\n            isHover.value = false;\r\n        };\r\n        const handleDrag = throttle((event) => {\r\n            if (!isTouch)\r\n                event.preventDefault();\r\n            endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            const deltaX = endPosition.x - startPosition.x;\r\n            const deltaY = endPosition.y - startPosition.y;\r\n            dragged.y = deltaY;\r\n            dragged.x = deltaX;\r\n        }, 16);\r\n        function handleDragStart(event) {\r\n            if (!isTouch)\r\n                event.preventDefault();\r\n            isTouch = event.type === 'touchstart';\r\n            if ((!isTouch && event.button !== 0) || isSliding.value) {\r\n                return;\r\n            }\r\n            isDragging.value = true;\r\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDrag);\r\n            document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd);\r\n        }\r\n        function handleDragEnd() {\r\n            isDragging.value = false;\r\n            const tolerance = Math.sign(dragged.x) * 0.4;\r\n            const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance);\r\n            let newSlide = getCurrentSlideIndex(config, currentSlideIndex.value - draggedSlides, maxSlideIndex.value, minSlideIndex.value);\r\n            slideTo(newSlide);\r\n            dragged.x = 0;\r\n            dragged.y = 0;\r\n            document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDrag);\r\n            document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd);\r\n        }\r\n        /**\r\n         * Autoplay\r\n         */\r\n        function initializeAutoplay() {\r\n            autoplayTimer.value = setInterval(() => {\r\n                if (config.pauseAutoplayOnHover && isHover.value) {\r\n                    return;\r\n                }\r\n                next();\r\n            }, config.autoplay);\r\n        }\r\n        function resetAutoplayTimer(restart = true) {\r\n            if (!autoplayTimer.value) {\r\n                return;\r\n            }\r\n            clearInterval(autoplayTimer.value);\r\n            if (restart) {\r\n                initializeAutoplay();\r\n            }\r\n        }\r\n        /**\r\n         * Navigation function\r\n         */\r\n        const isSliding = ref(false);\r\n        function slideTo(slideIndex, mute = false) {\r\n            resetAutoplayTimer();\r\n            if (currentSlideIndex.value === slideIndex || isSliding.value) {\r\n                return;\r\n            }\r\n            // Wrap slide index\r\n            const lastSlideIndex = slidesCount.value - 1;\r\n            if (slideIndex > lastSlideIndex) {\r\n                return slideTo(slideIndex - slidesCount.value);\r\n            }\r\n            if (slideIndex < 0) {\r\n                return slideTo(slideIndex + slidesCount.value);\r\n            }\r\n            isSliding.value = true;\r\n            prevSlideIndex.value = currentSlideIndex.value;\r\n            currentSlideIndex.value = slideIndex;\r\n            if (!mute) {\r\n                emit('update:modelValue', currentSlideIndex.value);\r\n            }\r\n            transitionTimer.value = setTimeout(() => {\r\n                if (config.wrapAround)\r\n                    updateSlidesBuffer();\r\n                isSliding.value = false;\r\n            }, config.transition);\r\n        }\r\n        function next() {\r\n            let nextSlide = currentSlideIndex.value + config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                nextSlide = Math.min(nextSlide, maxSlideIndex.value);\r\n            }\r\n            slideTo(nextSlide);\r\n        }\r\n        function prev() {\r\n            let prevSlide = currentSlideIndex.value - config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                prevSlide = Math.max(prevSlide, minSlideIndex.value);\r\n            }\r\n            slideTo(prevSlide);\r\n        }\r\n        const nav = { slideTo, next, prev };\r\n        provide('nav', nav);\r\n        /**\r\n         * Track style\r\n         */\r\n        const slidesToScroll = computed(() => {\r\n            let output = slidesBuffer.value.indexOf(currentSlideIndex.value);\r\n            if (config.snapAlign === 'center' || config.snapAlign === 'center-odd') {\r\n                output -= (config.itemsToShow - 1) / 2;\r\n            }\r\n            else if (config.snapAlign === 'center-even') {\r\n                output -= (config.itemsToShow - 2) / 2;\r\n            }\r\n            else if (config.snapAlign === 'end') {\r\n                output -= config.itemsToShow - 1;\r\n            }\r\n            if (!config.wrapAround) {\r\n                const max = slidesCount.value - config.itemsToShow;\r\n                const min = 0;\r\n                output = Math.max(Math.min(output, max), min);\r\n            }\r\n            return output;\r\n        });\r\n        provide('slidesToScroll', slidesToScroll);\r\n        const trackStyle = computed(() => {\r\n            const xScroll = dragged.x - slidesToScroll.value * slideWidth.value;\r\n            return {\r\n                transform: `translateX(${xScroll}px)`,\r\n                transition: `${isSliding.value ? config.transition : 0}ms`,\r\n            };\r\n        });\r\n        const slotsProps = reactive({\r\n            slideWidth,\r\n            slidesCount,\r\n            currentSlide: currentSlideIndex,\r\n        });\r\n        const slotSlides = slots.default || slots.slides;\r\n        const slotAddons = slots.addons;\r\n        watchEffect(() => {\r\n            // Handel when slides added/removed\r\n            const needToUpdate = slidesCount.value !== slides.value.length;\r\n            const currentSlideUpdated = props.modelValue !== undefined && currentSlideIndex.value !== props.modelValue;\r\n            if (currentSlideUpdated) {\r\n                slideTo(Number(props.modelValue), true);\r\n            }\r\n            if (needToUpdate) {\r\n                updateSlidesData();\r\n                updateSlidesBuffer();\r\n            }\r\n            if (slidesCounter.read) {\r\n                slidesCounter.value = slides.value.length - 1;\r\n            }\r\n        });\r\n        initDefaultConfigs();\r\n        updateBreakpointsConfigs();\r\n        updateSlidesBuffer();\r\n        return () => {\r\n            const slidesElements = getSlides(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\r\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\r\n            slides.value = slidesElements;\r\n            // Bind slide order\r\n            slidesElements.forEach((el, index) => (el.props.index = index));\r\n            const trackEl = h('ol', {\r\n                class: 'carousel__track',\r\n                style: trackStyle.value,\r\n                onMousedown: config.mouseDrag ? handleDragStart : null,\r\n                onTouchstart: config.touchDrag ? handleDragStart : null,\r\n            }, slidesElements);\r\n            const viewPortEl = h('div', { class: 'carousel__viewport' }, trackEl);\r\n            return h('section', {\r\n                ref: root,\r\n                class: 'carousel',\r\n                'aria-label': 'Gallery',\r\n                onMouseenter: handleMouseEnter,\r\n                onMouseleave: handleMouseLeave,\r\n            }, [viewPortEl, addonsElements]);\r\n        };\r\n    },\r\n});\n\nconst icons = {\r\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\r\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\r\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\r\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\r\n};\n\nconst Icon = (props) => {\r\n    const iconName = props.name;\r\n    if (!iconName || typeof iconName !== 'string') {\r\n        return;\r\n    }\r\n    const path = icons[iconName];\r\n    const pathEl = h('path', { d: path });\r\n    props.title || iconName;\r\n    const titleEl = h('title', null, iconName);\r\n    return h('svg', {\r\n        class: 'carousel__icon',\r\n        viewBox: '0 0 24 24',\r\n        role: 'img',\r\n    }, [titleEl, pathEl]);\r\n};\r\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\r\n    const { next: slotNext, prev: slotPrev } = slots;\r\n    const nav = inject('nav', {});\r\n    const prevButton = h('button', {\r\n        type: 'button',\r\n        class: ['carousel__prev', attrs === null || attrs === void 0 ? void 0 : attrs.class],\r\n        'aria-label': `Navigate to previous slide`,\r\n        onClick: nav.prev,\r\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: 'arrowLeft' }));\r\n    const nextButton = h('button', {\r\n        type: 'button',\r\n        class: ['carousel__next', attrs === null || attrs === void 0 ? void 0 : attrs.class],\r\n        'aria-label': `Navigate to next slide`,\r\n        onClick: nav.next,\r\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: 'arrowRight' }));\r\n    return [prevButton, nextButton];\r\n};\n\nvar Slide = defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const slidesBuffer = inject('slidesBuffer', ref([]));\r\n        const slidesCounter = inject('slidesCounter');\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const slideOrder = slidesCounter.value;\r\n        const wrapOrder = ref(slideOrder);\r\n        if (config.wrapAround) {\r\n            updateOrder();\r\n            watchEffect(updateOrder);\r\n        }\r\n        function updateOrder() {\r\n            wrapOrder.value = slidesBuffer.value.indexOf(slideOrder);\r\n        }\r\n        const slideStyle = computed(() => {\r\n            const items = config.itemsToShow;\r\n            const width = `${(1 / items) * 100}%`;\r\n            return {\r\n                width,\r\n                order: wrapOrder.value.toString(),\r\n            };\r\n        });\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isVisible = () => {\r\n            const min = Math.ceil(slidesToScroll.value);\r\n            const max = Math.floor(slidesToScroll.value + config.itemsToShow);\r\n            const current = slidesBuffer.value.slice(min, max);\r\n            return current.includes(props.index);\r\n        };\r\n        const isPrev = () => props.index === slidesBuffer.value[Math.ceil(slidesToScroll.value) - 1];\r\n        const isNext = () => props.index ===\r\n            slidesBuffer.value[Math.floor(slidesToScroll.value + config.itemsToShow)];\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: slideStyle.value,\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                },\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\n\nconst Pagination = () => {\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    function handleButtonClick(slideNumber) {\r\n        nav.slideTo(slideNumber);\r\n    }\r\n    const isActive = (slide) => {\r\n        const val = currentSlide.value;\r\n        return (val === slide ||\r\n            (val > maxSlide.value && slide >= maxSlide.value) ||\r\n            (val < minSlide.value && slide <= minSlide.value));\r\n    };\r\n    const children = [];\r\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\r\n        const button = h('button', {\r\n            type: 'button',\r\n            class: {\r\n                'carousel__pagination-button': true,\r\n                'carousel__pagination-button--active': isActive(slide),\r\n            },\r\n            'aria-label': `Navigate to slide ${slide + 1}`,\r\n            onClick: () => handleButtonClick(slide),\r\n        });\r\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\r\n        children.push(item);\r\n    }\r\n    return h('ol', { class: 'carousel__pagination' }, children);\r\n};\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n","import { render } from \"./Testimonials.vue?vue&type=template&id=02d74c7a\"\nimport script from \"./Testimonials.vue?vue&type=script&lang=js\"\nexport * from \"./Testimonials.vue?vue&type=script&lang=js\"\n\nimport \"./Testimonials.vue?vue&type=style&index=0&id=02d74c7a&lang=css\"\n\nimport exportComponent from \"C:\\\\xampp\\\\htdocs\\\\webpages\\\\tarot-espiritual-landing-page\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Testimonials.vue?vue&type=style&index=0&id=02d74c7a&lang=css\""],"sourceRoot":""}